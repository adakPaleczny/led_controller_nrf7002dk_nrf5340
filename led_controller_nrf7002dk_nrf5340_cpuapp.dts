/*
 * Copyright (c) 2023 Nordic Semiconductor ASA
 *
 * SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
 */

/dts-v1/;
#include <nordic/nrf5340_cpuapp_qkaa.dtsi>
#include "nrf5340_cpuapp_common.dts"
#include "led_controller_nrf7002dk_nrf5340_cpuapp-pinctrl.dtsi"

/ {
	model = "Nordic NRF7002 DK (emulating NRF7001) NRF5340 Application";
	compatible = "nordic,nrf7002-dk-nrf5340-cpuapp";

	chosen {
		zephyr,sram = &sram0_image;
		zephyr,flash = &flash0;
		zephyr,code-partition = &slot0_partition;
		zephyr,sram-secure-partition = &sram0_s;
		zephyr,sram-non-secure-partition = &sram0_ns;
	};

	pwmleds {
		compatible = "pwm-leds";
		pwm_red: pwm_red {
			pwms = <&pwm0 0 PWM_MSEC(10) PWM_POLARITY_NORMAL>;
            label = "Red PWM LED 0";
		};
		pwm_green: pwm_green {
			pwms = <&pwm1 0 PWM_MSEC(10) PWM_POLARITY_NORMAL>;
            label = "Green PWM LED 0";
		};
		pwm_blue: pwm_blue {
			pwms = <&pwm2 0 PWM_MSEC(10) PWM_POLARITY_NORMAL>;
            label = "Blue PWM LED 0";
		};
	};

	aliases {
		pwm-red = &pwm_red;
		pwm-green = &pwm_green;
		pwm-blue = &pwm_blue;
	};
};


&sw_pwm {
	status = "disabled";
};

&pwm0 {
	status = "okay";
	pinctrl-0 = <&pwm0_default>;
	pinctrl-1 = <&pwm0_sleep>;
    pinctrl-names = "default", "sleep";
};

&pwm1 {
	status = "okay";
	pinctrl-0 = <&pwm1_default>;
	pinctrl-1 = <&pwm1_sleep>;
    pinctrl-names = "default", "sleep";
};

&pwm2 {
	status = "okay";
	pinctrl-0 = <&pwm2_default>;
	pinctrl-1 = <&pwm2_sleep>;
    pinctrl-names = "default", "sleep";
};

&pinctrl {
	pwm0_default: pwm0_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 14)>;
			bias-pull-down;
		};
	};
	
	pwm1_default: pwm1_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 12)>;
			bias-pull-down;
		};
	};

	pwm2_default: pwm2_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 13)>;
			bias-pull-down;
		};
	};

	pwm0_sleep: pwm0_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 14)>;
            bias-pull-down;
        };
    };

    pwm1_sleep: pwm1_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 12)>;
            bias-pull-down;
        };
    };

    pwm2_sleep: pwm2_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 1, 13)>;
            bias-pull-down;
        };
    };

	i2c0_default: i2c0_default {
		group1 {
			psels = <NRF_PSEL(TWIM_SCL, 0, 25)>, <NRF_PSEL(TWIM_SDA, 0, 26)>;
		};
	};
};

&i2c0 {
	status = "okay";
	pinctrl-0 = <&i2c0_default>;
	pinctrl-names = "default";
	bme280@77 {
		compatible = "bosch,bme280";
		reg = <0x77>;
	};
};
